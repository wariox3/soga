<?php

namespace Soga\NominaBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * NominaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SsoPilaRepository extends EntityRepository
{   
    public function crearRegistro($codigoPeriodo) {        
        $em = $this->getEntityManager();           
        $arPeriodo = new \Soga\NominaBundle\Entity\SsoPeriodo();
        $arPeriodo = $em->getRepository('SogaNominaBundle:SsoPeriodo')->find($codigoPeriodo);                        
        $arContratos = new \Soga\NominaBundle\Entity\Contrato();                        
        $arContratos = $em->getRepository('SogaNominaBundle:Contrato')->devDqlContratosPeriodo($arPeriodo->getFechaDesde()->format('Y-m-d'), $arPeriodo->getFechaHasta()->format('Y-m-d'));                                                
        $i = 1;
        foreach ($arContratos as $arContrato) {
            $arEmpleado = new \Soga\NominaBundle\Entity\Empleado();
            $arEmpleado = $em->getRepository('SogaNominaBundle:Empleado')->find($arContrato->getCodemple());        
            $arEmpleadoSeguridadSocial = new \Soga\NominaBundle\Entity\SsoEmpleado();
            $arEmpleadoSeguridadSocial = $em->getRepository('SogaNominaBundle:SsoEmpleado')->findOneBy(array('numeroIdentificacion' => $arEmpleado->getCedemple()));
            //$arMunicipio = new \Soga\NominaBundle\Entity\Municipio();
            //$arMunicipio = $em->getRepository('SogaNominaBundle:Municipio')->find($arEmpleado->getCodmuni());        
            $arEps = new \Soga\NominaBundle\Entity\Eps();
            $arEps = $em->getRepository('SogaNominaBundle:Eps')->find($arEmpleado->getCodeps());                
            $arPension = new \Soga\NominaBundle\Entity\Pension();
            $arPension = $em->getRepository('SogaNominaBundle:Pension')->find($arEmpleado->getCodpension());                        
            $arCaja = new \Soga\NominaBundle\Entity\Caja();
            $arCaja = $em->getRepository('SogaNominaBundle:Caja')->find($arEmpleado->getCodigoCajaFk());                                    
            if($arEmpleadoSeguridadSocial != "") {                            
                $arPila = new \Soga\NominaBundle\Entity\SsoPila();
                $arPila->setCodigoContratoFk($arContrato->getContrato());
                $arPila->setCodigoPeriodoFk($codigoPeriodo);
                $arPila->setCodigoEmpleadoFk($arContrato->getCodemple());
                $arPila->setNumeroIdentificacion($this->RellenarNr($arEmpleado->getCedemple(), " ", 16, "D"));
                $arPila->setTipoRegistro('02');
                $arPila->setSecuencia($this->RellenarNr($i, "0", 5, "I"));
                $arPila->setTipoDocumento($arEmpleado->getTipod());
                $arPila->setTipo($this->RellenarNr($arEmpleadoSeguridadSocial->getTipoCotizanteRel()->getCodigoPila(), "0", 2, "I"));
                $arPila->setSubtipo($this->RellenarNr($arEmpleadoSeguridadSocial->getSubtipoCotizanteRel()->getCodigoPila(), "0", 2, "I"));
                if($arEmpleadoSeguridadSocial->getExtranjeroNoObligadoCotizarPensiones() == 1) {
                    $arPila->setExtranjeroNoObligadoCotizarPensiones('X');
                } else {
                    $arPila->setExtranjeroNoObligadoCotizarPensiones(' ');
                }
                if($arEmpleadoSeguridadSocial->getColombianoResidenteExterior() == 1) {
                    $arPila->setColombianoResidenteExterior('X');
                } else {
                    $arPila->setColombianoResidenteExterior(' ');
                }
                $arPila->setCodigoMunicipio('001');
                $arPila->setCodigoDepartamento('05');
                $arPila->setPrimerNombre($this->RellenarNr($arEmpleado->getNomemple(), " ", 20, "D"));
                $arPila->setSegundoNombre($this->RellenarNr($arEmpleado->getNomemple1(), " ", 30, "D"));
                $arPila->setPrimerApellido($this->RellenarNr($arEmpleado->getApemple(), " ", 20, "D"));
                $arPila->setSegundoApellido($this->RellenarNr($arEmpleado->getApemple1(), " ", 30, "D"));
                $arPila->setIngreso(' ');
                $arPila->setRetiro(' ');
                $arPila->setTrasladoDesdeOtraEps(' ');
                $arPila->setTrasladoAOtraEps(' ');
                $arPila->setTrasladoDesdeOtraPension(' ');
                $arPila->setTrasladoAOtraPension(' ');               
                $arPila->setVariacionPermanenteSalario(' ');
                $arPila->setCorrecciones(' ');
                $arPila->setVariacionTransitoriaSalario(' ');
                $arPila->setSuspensionTemporalContratoLicenciaServicios(' ');
                $arPila->setIncapacidadGeneral(' ');
                $arPila->setLicenciaMaternidad(' ');
                $arPila->setVacaciones(' ');
                $arPila->setAporteVoluntario(' ');
                $arPila->setVariacionCentrosTrabajo(' ');                
                $arPila->setIncapacidadAccidenteTrabajoEnfermedadProfesional('00');                
                $arPila->setCodigoEntidadPensionPertenece($this->RellenarNr($arPension->getCodigoInterfacePila(), " ", 6, "D"));
                $arPila->setCodigoEntidadPensionTraslada('      ');
                $arPila->setCodigoEntidadSaludPertenece($this->RellenarNr($arEps->getCodigoInterfacePila(), " ", 6, "D"));
                $arPila->setCodigoEntidadSaludTraslada('      ');
                $arPila->setCodigoEntidadCajaPertenece($this->RellenarNr($arCaja->getCodigoInterfacePila(), " ", 6, "D"));
                $arPila->setDiasCotizadosPension('00');
                $arPila->setDiasCotizadosSalud('00');
                $arPila->setDiasCotizadosRiesgosProfesionales('00');
                $arPila->setDiasCotizadosCajaCompensacion('00');
                $em->persist($arPila);
                $i++;
            }
        }
        $em->flush();        
        return true;
    }   
    
    public static function RellenarNr($Nro, $Str, $NroCr, $strPosicion) {
        $Longitud = strlen($Nro);
        $Nc = $NroCr - $Longitud;
        for ($i = 0; $i < $Nc; $i++) {
            if($strPosicion == "I") {
                $Nro = $Str . $Nro;
            } else {
                $Nro = $Nro . $Str;
            }
            
        }            

        return (string) $Nro;
    }    
}